{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2_3aQs4KxKIO",
        "outputId": "55f045a2-d45b-4956-98a6-0de2855cf842"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Enter years of experience: 6\n",
            "Predicted Salary: 78109.10561777622\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/base.py:465: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n",
            "  warnings.warn(\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "# Sample dataset with some None values\n",
        "data = {\n",
        "    'YearsExperience': [1.1, 1.5, 2.0, 3.0, 4.0, None, 5.0, 6.0, 7.0, 8.0],\n",
        "    'Salary': [40000, 45000, 50000, 60000, 65000, None, 70000, 80000, 85000, 90000]\n",
        "}\n",
        "\n",
        "# Create DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Fill None values with the mean of their column\n",
        "df = df.fillna(df.mean())\n",
        "\n",
        "# Define features and target variable\n",
        "X = df[['YearsExperience']]\n",
        "y = df['Salary']\n",
        "\n",
        "# Split the data into training and testing sets\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)\n",
        "\n",
        "# Create and train the model\n",
        "model = LinearRegression()\n",
        "model.fit(X_train, y_train)\n",
        "\n",
        "# User input for prediction\n",
        "years_experience = float(input(\"Enter years of experience: \"))\n",
        "predicted_salary = model.predict([[years_experience]])\n",
        "\n",
        "print(\"Predicted Salary:\", predicted_salary[0])"
      ]
    }
  ]
}
